///////////////////stack.h/////////////////
#pragma once
#include <iostream>
#define STACK_SIZE 256
using namespace std;
typedef char arreglo[STACK_SIZE];
class stack
{
	int sp; /* puntero de lectura/escritura */
	int items; /* número de elementos en lista */
	int itemsize; /* tamaño del elemento */
    arreglo pila; 
public:
	stack();
	~stack();
    int size();
	int empty();
	int put(char d);
	int get();
};

//////////////////stack.cpp/////////////////////////////
#include "StdAfx.h"
#include "stack.h"


stack::stack() {
			sp = STACK_SIZE-1;
			items = 0;
			itemsize = 1;
		 }
	 
		// destructor
		stack::~stack() {};
	 
	/* regresa el número de elementos en lista */
	int stack:: size() { return items; }
	 
	/* regresa 1 si no hay elementos en la lista, o sea, si la lista está vacia */
	int stack:: empty() { return items == 0; }
	 
	/* insertar elemento a la lista */
	int stack::put(char d)
	{
		if ( sp >= 0) {
			pila[sp] = d;
			sp --;
			items ++;
		}
		return d;
	}
	 
	/* retirar elemento de la lista */
	int stack::get()
	{
		if ( ! empty() ) {
			sp ++;
			items --;
		}
		return pila[sp];
	}
  
  //////////////////main////////////////////////////////
  #include "stdafx.h"
#include "stack.h"


int main()
{
    int d;
    stack s;  // s es un objeto (instancia) de la clase Stack
 
    // llenando la pila
    for (d='A'; d<='Z'; d++) s.put(d);
 
    cout << "Items =" << s.size() << endl;
 
    // vaciando la pila
    while ( s.size() ) cout << (char)s.get() << " ";
 
    cout << "\nPara terminar oprima <Enter>...";
    cin.get();
    return 0;
}
